# Engineering
# deploy_payload_images.yml
# Deployment of SAIL payload images to a specified Subscription in Azure
#
# Copyright (C) 2022 Secure Ai Labs, Inc. All Rights Reserved.
# Private and Confidential. Internal Use Only.
#
#     This software contains proprietary information which shall not
#     be reproduced or transferred to other documents and shall not
#     be disclosed to others for any purpose without
#     prior written permission of Secure Ai Labs, Inc.
#
#

name: Deploy Payload Images

on:
  workflow_dispatch:
    inputs:
      subscription:
        description: Choose Subscription
        required: true
        type: choice
        options:
          - Development
          - Release Candidate
          - ProductionGA

      image:
        description: Choose image
        required: true
        type: choice
        options:
          - apiservices
          - newwebfrontend
          - rpcrelated
env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_SECRET }}

jobs:
  deploy_images:
    runs-on: [self-hosted, Linux, x64, docker, Platform]
    steps:
      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - name: Check out source repository
        uses: actions/checkout@v2

      - name: "Decrypt env file used by AzureImageCreate.sh"
        run: npm run env:decrypt
        timeout-minutes: 1
        env:
          DOTENV_PASS: ${{ secrets.DOTENV_PASS }}

      - name: Condition 1 Development
        if: ${{ github.event.inputs.subscription == 'Development' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.DEVELOPMENT_AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP: ${{ secrets.DEVELOPMENT_RESOURCE_GROUP }}
          AZURE_STORAGE_ACCOUNT: $ {{ secrets.DEVELOPMENT_STORAGE_ACCOUNT_NAME }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          make all
          sudo -E ./AzureDeploymentTemplates/PackerTemplate/AzureImageCreate.sh -a -m  ${{ github.event.inputs.image' }}

      # - name: Condition 2 Release Candidate
      #   if: ${{ github.event.inputs.subscription == 'Release Candidate' }}
      #   env:
      #     AZURE_SUBSCRIPTION_ID: ${{ secrets.RELEASE_CANDIDATE_AZURE_SUBSCRIPTION_ID }}
      #   run: |
      #     echo "${{ github.head_ref }}"
      #     echo "${{ github.workspace }}"
      #     sudo chown -R $USER:$USER ${{ github.workspace }}
      #     set -e
      #     pwd
      #     ls -l
      #     sudo -E ./DeployPlatform.sh -m ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}

      # - name: Condition 3 ProductionGA
      #   if: ${{ github.event.inputs.subscription == 'ProductionGA' }}
      #   env:
      #     AZURE_SUBSCRIPTION_ID: ${{ secrets.PRODUCTION_GA_AZURE_SUBSCRIPTION_ID }}
      #   run: |
      #     echo "${{ github.head_ref }}"
      #     echo "${{ github.workspace }}"
      #     sudo chown -R $USER:$USER ${{ github.workspace }}
      #     set -e
      #     pwd
      #     ls -l
      #     sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
