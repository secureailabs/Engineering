# Engineering
# deploy_platform.yml
# Deployment of Platform Services [api + Frontend] to a specified Subscription in Azure
#
# Copyright (C) 2022 Secure Ai Labs, Inc. All Rights Reserved.
# Private and Confidential. Internal Use Only.
#
#     This software contains proprietary information which shall not
#     be reproduced or transferred to other documents and shall not
#     be disclosed to others for any purpose without
#     prior written permission of Secure Ai Labs, Inc.
#
#

name: Deploy Platform

on:
  workflow_dispatch:
    inputs:
      subscription:
        description: Choose Subscription
        required: true
        type: choice
        options:
          - Development
          - Release Candidate
          - ProductionGA

      preload_dataset:
        description: Preload dataset with DatasetTool
        required: true
        type: boolean

      purpose:
        description: "Purpose of Deployment"
        required: true
        type: string
      owner:
        description: "Owner of Deployment"
        required: true
        type: string
env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_SECRET }}
  AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}

jobs:
  Setup_Environment:
    runs-on: [self-hosted, Linux, x64, docker, Platform]
    steps:
      - name: Options selected
        run: |
          echo "Subscription: ${{ github.event.inputs.subscription }}"
          echo "Preload Datasets: ${{ github.event.inputs.preload_dataset }}"
          echo "Purpose of Deployment: ${{ github.event.inputs.purpose }}"
          echo "Owner of Deployment: ${{ github.event.inputs.owner }}"

      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Checkout DS Repo
        uses: actions/checkout@v3
        with:
          repository: secureailabs/datascience
          token: ${{ secrets.JENKINS_BUILD_TOKEN }}
          path: datascience
          persist-credentials: true

      - name: checkout submodule
        run: |
          git submodule init
          git submodule update --remote

  Deploy_Platform:
    runs-on: [self-hosted, Linux, x64, docker, Platform]
    needs: Setup_Environment
    steps:
      - name: Condition 1 Development
        if: ${{ github.event.inputs.subscription == 'Development' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.DEVELOPMENT_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
          fi

      - name: Condition 2 Release Candidate
        if: ${{ github.event.inputs.subscription == 'Release Candidate' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.RELEASE_CANDIDATE_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
          fi

      - name: Condition 3 ProductionGA
        if: ${{ github.event.inputs.subscription == 'ProductionGA' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.PRODUCTION_GA_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
          fi
