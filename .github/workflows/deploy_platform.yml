# Engineering
# deploy_platform.yml
# Deployment of Platform Services [api + Frontend] to a specified Subscription in Azure
#
# Copyright (C) 2022 Secure Ai Labs, Inc. All Rights Reserved.
# Private and Confidential. Internal Use Only.
#
#     This software contains proprietary information which shall not
#     be reproduced or transferred to other documents and shall not
#     be disclosed to others for any purpose without
#     prior written permission of Secure Ai Labs, Inc.
#
#

name: Deploy Platform

on:
  workflow_dispatch:
    inputs:
      subscription:
        description: 'Choose Subscription'
        required: true
        type: choice
        default: 'Development'
        options:
          - 'Development'
          - 'Release Candidate'
          - 'ProductionGA'

      purpose:
        description: "Purpose of Deployment"
        required: true
        type: string
        default: 'CI_TEST'
      owner:
        description: "Owner of Deployment"
        required: true
        type: string
        default: 'CI_RUNNER'

      preload_dataset:
        description: 'Preload dataset with DatasetTool'
        required: true
        type: boolean
        default: false

      run_tests:
        description: Runs tests after deployment
        required: true
        type: boolean
        default: true

      deprovision_after:
        description: Deprovision after deployment
        required: true
        type: boolean
        default: true

env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_SECRET }}
  AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
  PUBLIC_IP: "False"

jobs:
  Setup_Environment:
    runs-on: [self-hosted, Linux, x64, docker, Platform]
    steps:
      - name: Options selected
        run: |
          echo "Subscription: ${{ github.event.inputs.subscription }}"
          echo "Preload Datasets: ${{ github.event.inputs.preload_dataset }}"
          echo "Purpose of Deployment: ${{ github.event.inputs.purpose }}"
          echo "Owner of Deployment: ${{ github.event.inputs.owner }}"

      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - name: Check out source repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_BUILD_TOKEN }}
          persist-credentials: true
          submodules: true

  Deploy_Platform:
    runs-on: [self-hosted, Linux, x64, docker, Platform]
    needs: Setup_Environment
    outputs:
      internal_ip_addr: ${{ steps.deploy_step.outputs.INTERNAL_IP_ADDR }}
      deployment_id: ${{ steps.deploy_step.outputs.DEPLOY_ID }}
    steps:
      - name: Condition 1 Development
        if: ${{ github.event.inputs.subscription == 'Development' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.DEVELOPMENT_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          git config --global --add safe.directory '*'
          git submodule update
          make clean
          make all
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            echo "INTERNAL_IP_ADDR=$INTERNAL_ADDR_API_SERVICE" >> $GITHUB_OUTPUT
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            echo "INTERNAL_IP_ADDR=$INTERNAL_ADDR_API_SERVICE" >> $GITHUB_OUTPUT
          fi

      - name: Condition 2 Release Candidate
        if: ${{ github.event.inputs.subscription == 'Release Candidate' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.RELEASE_CANDIDATE_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
          fi

      - name: Condition 3 ProductionGA
        if: ${{ github.event.inputs.subscription == 'ProductionGA' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.PRODUCTION_GA_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ls -l
          if ${{ github.event.inputs.preload_dataset == 'true' }}; then
            exec 5>&1
            DEPLOY_OUTPUT=$(sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }} |tee >(cat - >&5))
            INTERNAL_ADDR_API_SERVICE=$(echo "$DEPLOY_OUTPUT" | grep  "SAIL API Services is hosted internally on: https://172" | cut -f3  -d "/" |tee >(cat - >&5))
            cd DatasetTool/
            dotnet build
            dotnet publish -c Release
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email lbart@igr.com --password SailPassword@123 --config SampleData/igr_config.json --ip $INTERNAL_ADDR_API_SERVICE
            bin/Release/net6.0/linux-x64/publish/DatasetTool --email nadams@mghl.com --password SailPassword@123 --config SampleData/mghl_config.json --ip $INTERNAL_ADDR_API_SERVICE
          else
            sudo -E ./DeployPlatform.sh -p ${{ github.event.inputs.purpose }} -o ${{ github.event.inputs.owner }}
          fi


  Test:
    runs-on: [self-hosted, Linux, x64, docker]
    needs: Deploy_Platform
    steps:
      - name: Run Tests
        if: ${{ github.event.inputs.run_tests == 'true' }}
        run: |
          echo "Run Tests: ${{ github.event.inputs.run_tests }}"
          echo "Head Ref: ${{ github.head_ref }}"
          echo "Workspace: ${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          ./ApiServices/build/test_setup.sh
          source venv38-sail_test/bin/activate
          pytest ApiServices/workflow_tests/test_api/test_backend/sail_portal_api_test.py -m "fastapi" -sv --ip ${{ needs.Deploy_Platform.outputs.internal_ip_addr }}  --port 8000


  Deprovision_Platform:
    runs-on: [self-hosted, Linux, x64, docker]
    needs: Deploy_Platform
    steps:
      - name: Deprovision Developement
        if: ${{ github.event.inputs.subscription == 'Development' }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.DEVELOPMENT_AZURE_SUBSCRIPTION_ID }}
        run: |
          echo "Deprovision: ${{ github.event.inputs.run_tests }}"
          echo "Head Ref: ${{ github.head_ref }}"
          echo "Workspace: ${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          set -e
          pwd
          chmod +x Deprovision.sh
          if ${{ github.event.inputs.deprovision_after == 'true' }}; then
            sudo ./Deprovision.sh -o CI_RUNNER <<<$(printf "3\n2\ny\n")
          else
            echo "No Deprovision."
          fi
