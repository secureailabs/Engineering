# Engineering
# ci_pr_main.yml
# Deployment of Platform Services [api + Frontend] to a specified Subscription in Azure
#
# Copyright (C) 2022 Secure Ai Labs, Inc. All Rights Reserved.
# Private and Confidential. Internal Use Only.
#
#     This software contains proprietary information which shall not
#     be reproduced or transferred to other documents and shall not
#     be disclosed to others for any purpose without
#     prior written permission of Secure Ai Labs, Inc.
#
#

name: "CI for Development Repository"
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main]

# Only one concurrent action at a time for group tag.
concurrency:
  group: ${{ github.head_ref || github.run_id }}

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.DEVELOPMENT_AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_DEPLOYPLATFORM_AZURE_CLIENT_SECRET }}
  AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
  DOCKER_REGISTRY_URL: ${{ secrets.DEVELOPMENT_DOCKER_REGISTRY_NAME }}.azurecr.io
  DOCKER_REGISTRY_USERNAME: ${{ secrets.DEVELOPMENT_DOCKER_REGISTRY_USERNAME }}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.DEVELOPMENT_DOCKER_REGISTRY_PASSWORD }}

jobs:
  start-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Output HeadRef
        run: echo "${{ github.head_ref }}"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Start self-hosted runner
        run: |
          az vm start --subscription Development -g CI-BUILDS-WUS-RG -n github-runner-wus-generic1
          az vm start --subscription Development -g CI-BUILDS-WUS-RG -n github-runner-wus-generic2

  clean:
    runs-on: [self-hosted, Linux, x64, docker]
    needs: start-runner
    steps:
      - name: cleanup
        run: |
          echo "${{ github.head_ref }}"
          echo "${{ github.workspace }}"
          sudo chown -R $USER:$USER ${{ github.workspace }}
          docker image prune --all -f

  build:
    runs-on: [self-hosted, Linux, x64, docker]
    needs: clean
    steps:
      - name: Clear repository
        run: sudo rm -rf $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - name: Check out source repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_BUILD_TOKEN }}
          persist-credentials: true
          submodules: true

      - name: Run a multi-line script, Build Binaries
        env:
          PAT: ${{ secrets.JENKINS_BUILD_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          set -e
          pwd
          ls -l
          sudo chmod 666 /var/run/docker.sock
          docker stop ubuntu_dev_CI || true && docker rm ubuntu_dev_CI || true
          docker build --no-cache -t ubuntu-ci:1.0 --build-arg git_personal_token=$PAT --build-arg branch=$BRANCH_NAME -f CI_CD/Dockerfile.ci .
          docker stop ubuntu_dev_CI || true && docker rm ubuntu_dev_CI || true

  teardown:
    runs-on: [self-hosted, Linux, x64, docker]
    if: ${{ always() }}
    needs: build
    steps:
      - name: Stop and Remove Docker Containers
        run: |
          set -e
          docker ps -a
          docker kill $(docker ps -q) || true
          docker rm $(docker ps -a -q) || true
          sudo make clean

  call-deploy-platform-workflow:
    needs: build
    uses: ./.github/workflows/wf_dispatch_deploy_platform.yml
    with:
      subscription: "Development"
      purpose: "PR-${{ github.event.pull_request.number }}"
      owner: "CI_RUNNER"
      api_services_tag: "default"
      audit_service_tag: "default"
      aggregator_scn_tag: "default"
      participant_scn_tag: "default"
      preload_dataset: true
      run_tests: true
      deprovision_after: true
    secrets: inherit

  # stop-runner:
  #   # Always stop runner even if build step fails
  #   if: always()
  #   runs-on: ubuntu-latest
  #   needs: [start-runner, build, teardown]
  #   steps:
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Deallocate self-hosted runner
  #       run: |
  #         pwd
  #         ls -l
  #         az vm deallocate  --subscription Build -g Dev-CI -n github-runner1 --no-wait

  workflow-conclusion:
    # Without this step workflow remains "green" if build does fail.
    if: always()
    runs-on: ubuntu-latest
    needs: [start-runner, build, call-deploy-platform-workflow]
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Check Job Status status and fail if they are red
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
